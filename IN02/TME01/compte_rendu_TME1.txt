Q4.4:

1-
tilisez les flèches haut ↑ et bas ↓ pour se déplacer dans l’historique des commandes que vous avez déjà
tapé
commencez à écrire le début d’une commande (ou le début du nom d’un fichier du répertoire courant),
puis utilisez la touche Tab (tabulation) pour que la commande (ou le nom du fichier) soit complétée
automatiquement

2-indentation traduit visuellement la structure du programme, elle met en relief les alternatives, les répé-
titions, les classes, etc. C’est pourquoi, indenter de manière lisible votre programme permet d’éviter des
erreurs de programmation et de gagner du temps.

3- pour eviter la perte de programme et pour eviter d'accumuler les erreurs

Q5.1:

public class Bonjour {
	public static void main (String [] args) {
		System.out.println ( "Bonjour !" );
	}
}

-javac Bonjour.java

-bonjour.class

-java Bonjour

-NON il n'est pas exécuté

Q5.2:

...

Q6.1:

public class Segment {

    private int x;
    private int y;

    public Segment(int extX, int extY) {
        x = extX;
        y = extY;
    }

    public int longueur() {
        if (x < y) {
            return y - x;
        } else {
            return x - y;
        }
    }


    public String toString() {
        return "Segment [" + x + "," + y + "]";
    }

}


Q6.2

public class TestSegment {
    public static void main(String[] args) {
        // Création des segments
        Segment segment1 = new Segment(6, 8);
        Segment segment2 = new Segment(12, 5);

        // Calcul des longueurs des segments
        int longueurSegment1 = segment1.longueur();
        int longueurSegment2 = segment2.longueur();

        // Comparaison des longueurs et affichage du résultat
        if (longueurSegment1 > longueurSegment2) {
            System.out.println("Le premier segment est plus long.");
        } else if (longueurSegment1 < longueurSegment2) {
            System.out.println("Le deuxième segment est plus long.");
        } else {
            System.out.println("Les deux segments ont la même longueur.");
        }
    }
}


Q7

import java.util.Random;

public class Villageois {
    private String nom;
    private double poids;
    private boolean malade;

    public Villageois(String nom, double poids, boolean malade) {
        this.nom = nom;
        this.poids = poids;
        this.malade = malade;
    }

    public Villageois(String nomVillageois) {
        this.nom = nomVillageois;
        this.poids = 50 + (Math.random() * 100); // Poids entre 50 et 150 kg (150 exclu)
        this.malade = Math.random() < 0.2; // 20% de chance d'être malade
    }

    public String getNom() {
        return nom;
    }

    public double getPoids() {
        return poids;
    }

    public boolean getMalade() {
        return malade;
    }

    public double poidsSouleve() {
        return malade ? poids / 4.0 : poids / 3.0;
    }

    @Override
    public String toString() {
        return String.format("villageois : %s, poids : %.2f kg, malade : %s, peut soulever %.2f kg",
                             nom, poids, malade ? "oui" : "non", poidsSouleve());
    }
}


public class TestVillageois {
    public static void main(String[] args) {
        Villageois villageois1 = new Villageois("Jean");
        Villageois villageois2 = new Villageois("Marie");
        Villageois villageois3 = new Villageois("Pierre");
        Villageois villageois4 = new Villageois("Sophie");

        Villageois[] villageoisArray = { villageois1, villageois2, villageois3, villageois4 };

        double poidsTotal = 0;
        for (Villageois v : villageoisArray) {
            System.out.println(v);
            poidsTotal += v.poidsSouleve();
        }

        System.out.println("\nPoids total soulevé par les villageois : " + poidsTotal + " kg");

        if (poidsTotal >= 100) {
            System.out.println("Les villageois peuvent soulever le rocher.");
        } else {
            System.out.println("Les villageois ne peuvent pas soulever le rocher.");
        }
    }
}

Q8

public class Lettre {
    private char caract;

    public Lettre(char c) {
        caract = c;
    }

    public char getCaract() {
        return caract;
    }

    public int getCodeAscii() {
        return (int) caract;
    }
}


public class TestLettre {
    public static void main(String[] args) {
        // Q 8.1 : Afficher les codes ASCII de 'a' à 'z'
        for (char c = 'a'; c <= 'z'; c++) {
            Lettre lettre = new Lettre(c);
            System.out.println("Caractère : " + lettre.getCaract() + ", Code ASCII : " + lettre.getCodeAscii());
        }

        System.out.println("\nQ 8.2 : Affichage de l'alphabet par lignes de cinq caractères");
        for (char c = 'a'; c <= 'z'; c++) {
            Lettre lettre = new Lettre(c);
            System.out.print(lettre.getCaract() + " ");
            if ((c - 'a' + 1) % 5 == 0) {
                System.out.println(); // Passer à la ligne tous les cinq caractères
            }
        }
    }
}
